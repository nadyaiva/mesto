(()=>{"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r,o){var i=t.handleCardClick,a=t.handleDeleteClick,u=t.handleToggleLike;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardItem=n,this._handleCardClick=i,this._cardSelector=r,this._likes=n.likes,this._element=this._getTemplate(),this._trashButtonElement=this._element.querySelector(".elements__button_trash"),this._buttonLikeElement=this._element.querySelector(".elements__button_like"),this._countLikeElem=this._element.querySelector(".elements__info_like-count"),this._imageElem=this._element.querySelector(".elements__image"),this._captionElem=this._element.querySelector(".elements__caption"),this._handleDelete=a,this._handleToggleLike=u,this._userId=o}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".elements__element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._imageElem.src=this._cardItem.link,this._imageElem.alt=this._cardItem.name,this._captionElem.textContent=this._cardItem.name,this._countLikeElem.textContent=this._likes.length,this._setEventListeners(),this._cardItem.owner._id!=this._userId&&this._trashButtonElement.classList.add("elements__button_trash_hidden"),this.isLiked()&&this._buttonLikeElement.classList.add("elements__button_like_active"),this._element}},{key:"_handleFullscreen",value:function(){this._handleCardClick(this._cardItem)}},{key:"_setEventListeners",value:function(){var t=this;this._buttonLikeElement.addEventListener("click",(function(){t._handleToggleLike(t,t._cardItem._id)})),this._trashButtonElement.addEventListener("click",(function(){t._handleDelete(t,t._cardItem,t._element)})),this._imageElem.addEventListener("click",(function(){t._handleFullscreen()}))}},{key:"isLiked",value:function(){var t=this;return Boolean(this._likes.find((function(e){return e._id===t._userId})))}},{key:"statusliketoggle",value:function(t){this._countLikeElem.textContent=t.likes.length,this.isLiked()?this._buttonLikeElement.classList.remove("elements__button_like_active"):this._buttonLikeElement.classList.add("elements__button_like_active"),this._likes=t.likes}},{key:"deleteCard",value:function(){this._element.remove()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=n,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));n.textContent=e,n.classList.add(this._errorClass),t.classList.add(this._inputErrorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));null!=e&&(t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent="")}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():this.activateButton()}},{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState(),this._formElement.reset()}},{key:"disableButton",value:function(){this._buttonElement.setAttribute("disabled","disabled"),this._buttonElement.classList.add(this._inactiveButtonClass)}},{key:"activateButton",value:function(){this._buttonElement.removeAttribute("disabled","disabled"),this._buttonElement.classList.remove(this._inactiveButtonClass)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._form=this._popup.querySelector(".form"),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){if(27===t.which){var e=document.querySelector(".popup_opened");this.close(e)}}},{key:"setEventListeners",value:function(){var t=this;document.addEventListener("click",(function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&t.close()}))}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=f(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},s.apply(this,arguments)}function f(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}function h(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=d(r);if(o){var n=d(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return h(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._fullscreenImage=e._popup.querySelector(".popup-fullscreen__image"),e._fullscreenCaption=e._popup.querySelector(".popup-fullscreen__caption"),e}return e=a,(n=[{key:"open",value:function(t){this._fullscreenImage.src=t.link,this._fullscreenCaption.textContent=t.name,this._fullscreenImage.alt=t.name,s(d(a.prototype),"open",this).call(this)}}])&&l(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=b(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},v.apply(this,arguments)}function b(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=E(t)););return t}function g(t,e){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},g(t,e)}function k(t,e){if(e&&("object"===y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function E(t){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},E(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&g(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=E(r);if(o){var n=E(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return k(this,t)});function a(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,t))._formSubmit=n,r._inputList=r._popup.querySelectorAll(".popup__input"),r._formValidator=e,r._formValidator.resetValidation(),r._submitButton=r._form.querySelector(".popup__save-button"),r}return e=a,(n=[{key:"renderLoading",value:function(t){this._submitButton.textContent="".concat(t)}},{key:"_getInputValues",value:function(){var t=this;return this._inputValues={},this._inputList.forEach((function(e){t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name].textContent}))}},{key:"close",value:function(){v(E(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var t=this;v(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(t._getInputValues())}))}}])&&m(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=C(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},O.apply(this,arguments)}function C(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function I(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}var R=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=P(r);if(o){var n=P(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return I(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._submitButton=e._form.querySelector(".popup__save-button"),e}return e=a,(n=[{key:"renderLoading",value:function(t){this._submitButton.textContent="".concat(t)}},{key:"visualizeLoading",value:function(t){this._submitButton.textContent="".concat(t)}},{key:"setSubmitHandler",value:function(t){this._formSubmit=t}},{key:"setEventListeners",value:function(){var t=this;O(P(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(),t.close()}))}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var B=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(n),this._avatarElement=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{fullname:this._nameElement,jobtitle:this._jobElement}}},{key:"setUserInfo",value:function(t){var e=t.nameInput,n=t.jobInput;this._nameElement.textContent=e,this._jobElement.textContent=n}},{key:"setUserAvatar",value:function(t){this._avatarElement.src=t}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var A=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._authorization=e.authorization,this._cohort=e.cohort,this._baseurl=e.baseurl}var e,n;return e=t,(n=[{key:"_handleResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getUserInfoApi",value:function(){return fetch("".concat(this._baseurl).concat(this._cohort,"/users/me"),{headers:{authorization:this._authorization}}).then(this._handleResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseurl).concat(this._cohort,"/cards"),{headers:{authorization:this._authorization}}).then(this._handleResponse)}},{key:"updateUserInfo",value:function(t,e){return fetch("".concat(this._baseurl).concat(this._cohort,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:e})}).then(this._handleResponse)}},{key:"addNewCard",value:function(t){return fetch("".concat(this._baseurl).concat(this._cohort,"/cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t.cardname,link:t.link})}).then(this._handleResponse)}},{key:"changeCardLikeStatus",value:function(t,e){return fetch("".concat(this._baseurl).concat(this._cohort,"/cards/").concat(t,"/likes"),{method:e?"PUT":"DELETE",headers:{authorization:this._authorization}}).then(this._handleResponse)}},{key:"deletePost",value:function(t){return fetch("".concat(this._baseurl).concat(this._cohort,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._authorization}}).then(this._handleResponse)}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseurl).concat(this._cohort,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this._handleResponse)}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var z,V,D=document.querySelector(".profile__button_type_add"),U=document.querySelector(".profile__button_type_edit"),N=document.querySelector(".profile__avatar"),H={};V={formSelector:".form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},Array.from(document.querySelectorAll(V.formSelector)).forEach((function(t){var e=new r(V,t);H[t.name]=e,e.enableValidation()}));var J=new A({authorization:"d94e7cf1-3761-45b6-9798-0ad1da8f2858",cohort:"cohort-42",baseurl:"https://nomoreparties.co/v1/"}),F=new B(".profile__name",".profile__title",".profile__avatar");Promise.all([J.getUserInfoApi(),J.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return x(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];F.setUserAvatar(o.avatar),F.setUserInfo({nameInput:o.name,jobInput:o.about}),z=o._id,M.renderItems(i)})).catch((function(t){return console.log(t)}));var M=new i({renderer:function(t){M.addItem(Q(t))}},".elements"),$=new _(".popup-fullscreen"),G=function(t){$.open(t)},K=new R(".popup_place_confirm");function Q(t){var n=new e({handleCardClick:G,handleDeleteClick:function(t){K.renderLoading("Да"),K.setSubmitHandler((function(){J.deletePost(t._cardItem._id).then((function(t){n.deleteCard(),K.close()})).catch((function(t){return console.log(t)})).finally(K.renderLoading("Удаление..."))})),K.open()},handleToggleLike:function(t,e){J.changeCardLikeStatus(e,!t.isLiked()).then((function(e){console.log("andleToggleLikeClick",e),t.statusliketoggle(e)})).catch((function(t){return console.log(t)}))}},t,".element-template_default",z);return n.generateCard()}var W=new w(".popup_place_add-photo",H["popup-add-photo"],(function(t){J.addNewCard(t).then((function(t){M.addItem(Q(t)),W.close()})).catch((function(t){console.log(t)})).finally((function(){W.renderLoading("Сохранение...")}))})),X=new w(".popup_place_avatar",H["popup-avatar"],(function(t){J.updateAvatar(t.link).then((function(t){F.setUserAvatar(t.avatar),X.close()})).catch((function(t){console.log("Ошибка. Запрос не выполнен: ",t)})).finally((function(){X.renderLoading("Сохранение...")}))})),Y=new w(".popup_place_edit-profile",H["form-profile"],(function(t){J.updateUserInfo(t.fullname,t.jobtitle).then((function(){F.setUserInfo({nameInput:t.fullname,jobInput:t.jobtitle}),Y.close()})).catch((function(t){console.log("Ошибка. Запрос не выполнен: ",t)})).finally((function(){Y.renderLoading("Сохранение...")}))}));X.setEventListeners(),Y.setEventListeners(),K.setEventListeners(),W.setEventListeners(),$.setEventListeners(),U.addEventListener("click",(function(){H["form-profile"].resetValidation(),Y.setInputValues(F.getUserInfo()),Y.renderLoading("Сохранить"),Y.open()})),D.addEventListener("click",(function(){H["popup-add-photo"].resetValidation(),W.renderLoading("Создать"),W.open()})),N.addEventListener("click",(function(){H["popup-avatar"].resetValidation(),X.renderLoading("Сохранить"),X.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,